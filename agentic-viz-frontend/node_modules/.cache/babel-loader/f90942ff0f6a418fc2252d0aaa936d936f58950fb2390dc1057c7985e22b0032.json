{"ast":null,"code":"var _jsxFileName = \"/Users/akshaykumar/Documents/Projects/HTF-I08/agentic-viz-frontend/src/components/VoiceInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceInput = ({\n  onTranscript,\n  disabled\n}) => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [error, setError] = useState(null);\n  const [recognition, setRecognition] = useState(null);\n  const [interimTranscript, setInterimTranscript] = useState('');\n  const timeoutRef = useRef(null);\n  const initializeRecognition = useCallback(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      setError('Speech recognition is not supported in your browser');\n      return null;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true; // Enable continuous listening\n    recognition.interimResults = true; // Enable interim results\n    recognition.lang = 'en-US';\n    recognition.onresult = event => {\n      let finalTranscript = '';\n      let interimTranscript = '';\n\n      // Process results\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\n        if (event.results[i].isFinal) {\n          finalTranscript += event.results[i][0].transcript;\n        } else {\n          interimTranscript += event.results[i][0].transcript;\n        }\n      }\n\n      // Handle final transcript\n      if (finalTranscript) {\n        onTranscript(finalTranscript);\n      }\n      // Update interim transcript for visual feedback\n      setInterimTranscript(interimTranscript);\n    };\n    recognition.onerror = event => {\n      setIsListening(false);\n      switch (event.error) {\n        case 'network':\n          setError('Network error. Please check your internet connection.');\n          break;\n        case 'not-allowed':\n          setError('Microphone access denied. Please allow microphone access.');\n          break;\n        case 'no-speech':\n          setError('No speech detected. Please try again.');\n          break;\n        default:\n          setError(`Error: ${event.error}`);\n      }\n    };\n    recognition.onend = () => {\n      // Only stop listening if we intended to stop\n      if (isListening) {\n        recognition.start(); // Restart if we didn't intend to stop\n      } else {\n        setIsListening(false);\n        setInterimTranscript('');\n      }\n    };\n    return recognition;\n  }, [onTranscript, isListening]);\n\n  // Clean up timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n  useEffect(() => {\n    // Initialize recognition once on mount\n    const rec = initializeRecognition();\n    if (rec) setRecognition(rec);\n  }, [initializeRecognition]);\n  const toggleListening = async () => {\n    setError(null);\n    if (isListening) {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n      recognition === null || recognition === void 0 ? void 0 : recognition.stop();\n      setIsListening(false);\n      setInterimTranscript('');\n    } else {\n      try {\n        // Check microphone permission first\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        stream.getTracks().forEach(track => track.stop()); // Clean up\n\n        if (recognition) {\n          recognition.start();\n          setIsListening(true);\n\n          // Set a timeout to stop recording after 30 seconds\n          timeoutRef.current = setTimeout(() => {\n            recognition.stop();\n            setIsListening(false);\n            setInterimTranscript('');\n          }, 30000); // 30 seconds timeout\n        }\n      } catch (err) {\n        setError('Microphone access denied. Please allow microphone access.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voice-input\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: `voice-input-button ${isListening ? 'listening' : ''} ${error ? 'error' : ''}`,\n      onClick: toggleListening,\n      disabled: disabled,\n      title: isListening ? 'Stop recording' : 'Start recording',\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        width: \"24\",\n        height: \"24\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          fill: \"currentColor\",\n          d: \"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.91-3c-.49 0-.9.36-.98.85C16.52 14.2 14.47 16 12 16s-4.52-1.8-4.93-4.15c-.08-.49-.49-.85-.98-.85-.61 0-1.09.54-1 1.14.49 3 2.89 5.35 5.91 5.78V20c0 .55.45 1 1 1s1-.45 1-1v-2.08c3.02-.43 5.42-2.78 5.91-5.78.1-.6-.39-1.14-1-1.14z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), isListening && interimTranscript && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-input-interim\",\n      children: interimTranscript\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-input-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceInput, \"eRLVbL5GgFMdEvSCifvbROBjTnc=\");\n_c = VoiceInput;\nexport default VoiceInput;\nvar _c;\n$RefreshReg$(_c, \"VoiceInput\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","useRef","jsxDEV","_jsxDEV","VoiceInput","onTranscript","disabled","_s","isListening","setIsListening","error","setError","recognition","setRecognition","interimTranscript","setInterimTranscript","timeoutRef","initializeRecognition","SpeechRecognition","window","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","finalTranscript","i","resultIndex","results","length","isFinal","transcript","onerror","onend","start","current","clearTimeout","rec","toggleListening","stop","stream","navigator","mediaDevices","getUserMedia","audio","getTracks","forEach","track","setTimeout","err","className","children","type","onClick","title","viewBox","width","height","fill","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akshaykumar/Documents/Projects/HTF-I08/agentic-viz-frontend/src/components/VoiceInput.js"],"sourcesContent":["import React, { useState, useCallback, useEffect, useRef } from 'react';\n\nconst VoiceInput = ({ onTranscript, disabled }) => {\n  const [isListening, setIsListening] = useState(false);\n  const [error, setError] = useState(null);\n  const [recognition, setRecognition] = useState(null);\n  const [interimTranscript, setInterimTranscript] = useState('');\n  const timeoutRef = useRef(null);\n\n  const initializeRecognition = useCallback(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      setError('Speech recognition is not supported in your browser');\n      return null;\n    }\n\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true; // Enable continuous listening\n    recognition.interimResults = true; // Enable interim results\n    recognition.lang = 'en-US';\n\n    recognition.onresult = (event) => {\n      let finalTranscript = '';\n      let interimTranscript = '';\n\n      // Process results\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\n        if (event.results[i].isFinal) {\n          finalTranscript += event.results[i][0].transcript;\n        } else {\n          interimTranscript += event.results[i][0].transcript;\n        }\n      }\n\n      // Handle final transcript\n      if (finalTranscript) {\n        onTranscript(finalTranscript);\n      }\n      // Update interim transcript for visual feedback\n      setInterimTranscript(interimTranscript);\n    };\n\n    recognition.onerror = (event) => {\n      setIsListening(false);\n      switch (event.error) {\n        case 'network':\n          setError('Network error. Please check your internet connection.');\n          break;\n        case 'not-allowed':\n          setError('Microphone access denied. Please allow microphone access.');\n          break;\n        case 'no-speech':\n          setError('No speech detected. Please try again.');\n          break;\n        default:\n          setError(`Error: ${event.error}`);\n      }\n    };\n\n    recognition.onend = () => {\n      // Only stop listening if we intended to stop\n      if (isListening) {\n        recognition.start(); // Restart if we didn't intend to stop\n      } else {\n        setIsListening(false);\n        setInterimTranscript('');\n      }\n    };\n\n    return recognition;\n  }, [onTranscript, isListening]);\n\n  // Clean up timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    // Initialize recognition once on mount\n    const rec = initializeRecognition();\n    if (rec) setRecognition(rec);\n  }, [initializeRecognition]);\n\n  const toggleListening = async () => {\n    setError(null);\n    \n    if (isListening) {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n      recognition?.stop();\n      setIsListening(false);\n      setInterimTranscript('');\n    } else {\n      try {\n        // Check microphone permission first\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        stream.getTracks().forEach(track => track.stop()); // Clean up\n\n        if (recognition) {\n          recognition.start();\n          setIsListening(true);\n          \n          // Set a timeout to stop recording after 30 seconds\n          timeoutRef.current = setTimeout(() => {\n            recognition.stop();\n            setIsListening(false);\n            setInterimTranscript('');\n          }, 30000); // 30 seconds timeout\n        }\n      } catch (err) {\n        setError('Microphone access denied. Please allow microphone access.');\n      }\n    }\n  };\n\n  return (\n    <div className=\"voice-input\">\n      <button\n        type=\"button\"\n        className={`voice-input-button ${isListening ? 'listening' : ''} ${error ? 'error' : ''}`}\n        onClick={toggleListening}\n        disabled={disabled}\n        title={isListening ? 'Stop recording' : 'Start recording'}\n      >\n        <svg viewBox=\"0 0 24 24\" width=\"24\" height=\"24\">\n          <path \n            fill=\"currentColor\" \n            d=\"M12 14c1.66 0 3-1.34 3-3V5c0-1.66-1.34-3-3-3S9 3.34 9 5v6c0 1.66 1.34 3 3 3zm5.91-3c-.49 0-.9.36-.98.85C16.52 14.2 14.47 16 12 16s-4.52-1.8-4.93-4.15c-.08-.49-.49-.85-.98-.85-.61 0-1.09.54-1 1.14.49 3 2.89 5.35 5.91 5.78V20c0 .55.45 1 1 1s1-.45 1-1v-2.08c3.02-.43 5.42-2.78 5.91-5.78.1-.6-.39-1.14-1-1.14z\"\n          />\n        </svg>\n      </button>\n      {isListening && interimTranscript && (\n        <div className=\"voice-input-interim\">{interimTranscript}</div>\n      )}\n      {error && <div className=\"voice-input-error\">{error}</div>}\n    </div>\n  );\n};\n\nexport default VoiceInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}